
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply from: 'https://raw.github.com/gist/1527604/4080ebed7b141d10610825aebd70942fcd301105/emma.gradle'
apply plugin: 'findbugs'

project.group = 'de.prob'
sourceCompatibility = 1.6

project.version = '2.0.0-milestone-2-SNAPSHOT'

repositories {
    maven {
      name "cobra"
      url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
    } 
}


tasks.withType(FindBugs){
ignoreFailures = true
}


def  ft = findbugsMain.classes
ft.exclude '**/org/codehaus/groovy/tools/shell/*','**/SpockDomWalkerTest.class',"**/de/prob/scripting/Downloader*.class"
findbugsMain.classes = files(ft.files) // explicit list of files

def  ftc = findbugsTest.classes
ftc.exclude '**/SpockDomWalkerTest*'
findbugsTest.classes = files(ftc.files) // explicit list of files


sourceSets.main.java.srcDirs = [] // ie there's no stand-alone java source
sourceSets.main.groovy.srcDir 'src/main/java' // ie include the 'java' dir as groovy source

def parser_version = '2.4.2-SNAPSHOT'

dependencies {

	groovy 'org.codehaus.groovy:groovy:1.8.5'

	
	
	
	compile 'com.google.guava:guava:r09'
	compile 'commons-cli:commons-cli:1.2'

	compile 'org.codehaus.groovy:groovy:1.8.5'
	compile 'org.fusesource.jansi:jansi:1.5'
	compile 'jline:jline:0.9.94'


 compile group: "de.prob", name: "answerparser", version: parser_version , changing: true
 compile group: "de.prob", name: "bparser", version: parser_version , changing: true
 compile group: "de.prob", name: "cliparser", version: parser_version , changing: true
 compile group: "de.prob", name: "ltlparser", version: parser_version , changing: true
 compile group: "de.prob", name: "parserbase", version: parser_version , changing: true
 compile group: "de.prob", name: "prologlib", version: parser_version , changing: true
 compile group: "de.prob", name: "unicode", version: parser_version , changing: true


	compile 'com.google.inject:guice:3.0'
	compile 'com.google.inject.extensions:guice-assistedinject:3.0'
	compile 'org.slf4j:slf4j-api:1.6.1'
	compile 'ch.qos.logback:logback-core:0.9.29'
	compile 'ch.qos.logback:logback-classic:0.9.29'
	compile 'net.sf.jung:jung-graph-impl:2.0.1'

	testCompile 'junit:junit:4.8.2'
	testCompile 'org.mockito:mockito-core:1.8.5'
	testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
}

task createBuildConstants  {
	doFirst {
		def buildconstants_class = """
version=${project.version}"""
		File f = file("src/main/resources/build.properties")
		f.delete()
		f <<  buildconstants_class
	}
}

compileJava {
	dependsOn createBuildConstants
}

task pack(type: Jar, dependsOn: [jar]) {
	baseName = project.name + '-standalone'
	def deps = configurations.runtime + configurations.archives.allArtifacts.files
	def depClasses = {
		deps.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	from(depClasses) {
		exclude 'META-INF/MANIFEST.MF'
	}
	manifest {
		attributes 'Main-Class': 'de.prob.Main'
	}
	doLast{
		println "Created archive: "+archivePath
	}
}

task deploy(dependsOn: [jar, test,javadoc,pack], group: 'Build') {
	description = 'Assembles the uberjar, runs all tests and builds the javadoc.'
}


test.doFirst {
	systemProperties['integrationtest'] = 'true'
}

javadoc {
	title="ProB Core "+project.version
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-8a'
}

task integrationtests(dependsOn: 'classes', type:JavaExec){
	main = 'de.prob.Main'
	classpath = sourceSets.main.runtimeClasspath
	args = ['-test','groovyTests']
}



